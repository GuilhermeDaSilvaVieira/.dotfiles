--[[ local _M = {} ]]
--[[ function _M.create_wibox(s) ]]
--[[   local utils = require("utils") ]]
--[[]]
--[[   local DEFAULT_OPTS = { ]]
--[[     widget_spacing = beautiful.spacing, ]]
--[[     bg = beautiful.bg_normal, ]]
--[[   } ]]
--[[]]
--[[   local wrap_bg = function(widgets, opts) ]]
--[[     opts = utils.misc.tbl_override(DEFAULT_OPTS, opts or {}) ]]
--[[]]
--[[     if type(widgets) == "table" then ]]
--[[       widgets.spacing = opts.widget_spacing ]]
--[[     end ]]
--[[]]
--[[     return wibox.widget({ ]]
--[[       { ]]
--[[         widgets, ]]
--[[         left = beautiful.spacing_lg, ]]
--[[         right = beautiful.spacing_lg, ]]
--[[         top = beautiful.spacing, ]]
--[[         bottom = beautiful.spacing, ]]
--[[         widget = wibox.container.margin, ]]
--[[       }, ]]
--[[       shape = function(cr, w, h) ]]
--[[         gears.shape.rounded_rect(cr, w, h, 25) ]]
--[[       end, ]]
--[[       bg = opts.bg, ]]
--[[       widget = wibox.container.background, ]]
--[[     }) ]]
--[[   end ]]
--[[   local mywibox = awful.wibar({ ]]
--[[     screen = s, ]]
--[[     position = "top", ]]
--[[     type = "dock", ]]
--[[     bg = "#00000000", ]]
--[[   }) ]]
--[[]]
--[[   mywibox:setup({ ]]
--[[     { ]]
--[[       layout = wibox.layout.stack, ]]
--[[       { ]]
--[[         layout = wibox.layout.align.horizontal, ]]
--[[         { -- Left widgets ]]
--[[           layout = wibox.layout.fixed.horizontal, ]]
--[[           wrap_bg(s.taglist), ]]
--[[         }, ]]
--[[         nil, ]]
--[[         { -- Right widgets ]]
--[[           layout = wibox.layout.fixed.horizontal, ]]
--[[           spacing = beautiful.spacing, ]]
--[[           wrap_bg(wibox.widget.systray()), ]]
--[[           wrap_bg( ]]
--[[             { layout = wibox.layout.fixed.horizontal, volume.volume }, ]]
--[[             { widget_spacing = beautiful.spacing_lg } ]]
--[[           ), ]]
--[[           wrap_bg(widgets.username), ]]
--[[           wrap_bg(_M.keyboardlayout), ]]
--[[         }, ]]
--[[         widget = wibox.container.margin, ]]
--[[       }, ]]
--[[       { ]]
--[[         wrap_bg(_M.textclock), ]]
--[[         valign = "center", ]]
--[[         halign = "center", ]]
--[[         layout = wibox.container.place, ]]
--[[       }, ]]
--[[     }, ]]
--[[     left = beautiful.useless_gap * 2, ]]
--[[     right = beautiful.useless_gap * 2, ]]
--[[     top = beautiful.useless_gap * 2, ]]
--[[     widget = wibox.container.margin, ]]
--[[   }) ]]
--[[]]
--[[   return mywibox ]]
--[[ end ]]
--[[]]
--[[ return _M ]]
